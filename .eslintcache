[{"/Users/funkyflea/workspace/ui-practice/src/index.tsx":"1","/Users/funkyflea/workspace/ui-practice/src/reportWebVitals.ts":"2","/Users/funkyflea/workspace/ui-practice/src/App.tsx":"3","/Users/funkyflea/workspace/ui-practice/src/features/ts/ballDrag.tsx":"4","/Users/funkyflea/workspace/ui-practice/src/features/ts/ballDrag-spring.tsx":"5","/Users/funkyflea/workspace/ui-practice/src/features/ts/ballDrag-scratch.tsx":"6","/Users/funkyflea/workspace/ui-practice/src/features/ts/ReactClock.tsx":"7"},{"size":488,"mtime":1607109614938,"results":"8","hashOfConfig":"9"},{"size":395,"mtime":1607109615001,"results":"10","hashOfConfig":"9"},{"size":147,"mtime":1608686313773,"results":"11","hashOfConfig":"9"},{"size":4423,"mtime":1607530815260,"results":"12","hashOfConfig":"13"},{"size":3294,"mtime":1607538127715,"results":"14","hashOfConfig":"13"},{"size":3245,"mtime":1608686314035,"results":"15","hashOfConfig":"16"},{"size":3954,"mtime":1608693808989,"results":"17","hashOfConfig":"9"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6781dg",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hli9cv",{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ymhnt0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/funkyflea/workspace/ui-practice/src/index.tsx",[],"/Users/funkyflea/workspace/ui-practice/src/reportWebVitals.ts",[],"/Users/funkyflea/workspace/ui-practice/src/App.tsx",[],"/Users/funkyflea/workspace/ui-practice/src/features/ts/ballDrag.tsx",["33"],"/Users/funkyflea/workspace/ui-practice/src/features/ts/ballDrag-spring.tsx",["34","35","36","37","38"],"import React, { ReactElement, useState, useEffect, useRef } from 'react'\nimport { range } from 'lodash'\nimport { interpolate, useSprings, animated as a } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport { clamp } from 'lodash'\nimport styled from '@emotion/styled'\nconst springSetting1 = { stiffness: 180, damping: 10 }\nconst springSetting2 = { stiffness: 120, damping: 17 }\n\n// props\n\nconst allColors = [\n\t'#EF767A',\n\t'#456990',\n\t'#49BEAA',\n\t'#49DCB1',\n\t'#EEB868',\n\t'#EF767A',\n\t'#456990',\n\t'#49BEAA',\n\t'#49DCB1',\n\t'#EEB868',\n\t'#EF767A'\n]\n\nconst [count, width, height] = [11, 70, 90]\n\nconst layout = range(count).map(n => {\n\tconst row = Math.floor(n / 3)\n\tconst col = n % 3\n\treturn [width * col, height * row]\n})\n\n// Returns fitting styles for dragged/idle items\nconst fn = ({\n\torder,\n\tdown,\n\toriginalIndex,\n\tcurIndex,\n\ty,\n\tx\n}: {\n\torder: any[]\n\tdown?: boolean\n\toriginalIndex?: number\n\tcurIndex?: number\n\ty?: number\n\tx?: number\n}) => (index: number) => {\n\tif (down && index === originalIndex)\n\t\treturn {\n\t\t\ty,\n\t\t\tx,\n\t\t\tscale: 1.1,\n\t\t\tzIndex: '1',\n\t\t\tshadow: 15,\n\t\t\timmediate: (n: any) => n === 'y' || n === 'zIndex'\n\t\t}\n\n\tconst position = layout[order.indexOf(originalIndex)] as [number, number]\n\n\treturn {\n\t\tx: position[0],\n\t\ty: position[1],\n\t\tscale: 1,\n\t\tzIndex: '0',\n\t\tshadow: 1,\n\t\timmediate: false\n\t}\n}\n\nfunction reinsert(arr: any[], from: number, to: number) {\n\tconst _arr = arr.slice(0)\n\tconst val = _arr[from]\n\t_arr.splice(from, 1)\n\t_arr.splice(to, 0, val)\n\treturn _arr\n}\nexport default function Index({ items }: { items: string[] }): ReactElement {\n\tconst order = useRef(items.map((_, index) => index)) // Store indicies as a local ref, this represents the item order\n\tconst [springs, setSprings] = useSprings(items.length, i => ({\n\t\ty: i * 100,\n\t\tscale: 1,\n\t\tzIndex: '0',\n\t\tshadow: 1,\n\t\timmediate: false\n\t})) // Create springs, each corresponds to an item, controlling its transform, scale, etc.\n\t// @ts-ignore\n\tconst bind = useGesture(({ args: [originalIndex], down, delta: [x, y] }) => {\n\t\tconst curIndex = order.current.indexOf(originalIndex)\n\t\tconst curRow = clamp(\n\t\t\tMath.round((curIndex * 100 + y) / 100),\n\t\t\t0,\n\t\t\titems.length - 1\n\t\t)\n\n\t\tconst newOrder = reinsert(order.current, curIndex, curRow)\n\t\t// @ts-ignore\n\t\tsetSprings(fn({ order: newOrder, down, originalIndex, curIndex, y })) // Feed springs new style data, they'll animate the view without causing a single render\n\t\tif (!down) order.current = newOrder\n\t})\n\n\treturn (\n\t\t<div className=\"content\" style={{ height: items.length * 100 }}>\n\t\t\t{springs.map(({ zIndex, shadow, y, scale }, i) => (\n\t\t\t\t<Animated\n\t\t\t\t\t{...bind(i)}\n\t\t\t\t\tkey={i}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tzIndex,\n\t\t\t\t\t\tboxShadow: shadow.interpolate(\n\t\t\t\t\t\t\ts => `rgba(0, 0, 0, 0.15) 0px ${s}px ${2 * s}px 0px`\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttransform: interpolate(\n\t\t\t\t\t\t\t[y, scale],\n\t\t\t\t\t\t\t(y, s) => `translate3d(0,${y}px,0) scale(${s})`\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t\tchildren={items[i]}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nconst Animated = styled(a.div)`\n\tposition: absolute;\n\twidth: 320px;\n\theight: 90px;\n\toverflow: visible;\n\tpointer-events: auto;\n\ttransform-origin: 50% 50% 0px;\n\tborder-radius: 5px;\n\tcolor: white;\n\tline-height: 90px;\n\tpadding-left: 32px;\n\tfont-size: 14.5px;\n\tbackground: lightblue;\n\ttext-transform: uppercase;\n\tletter-spacing: 2px;\n`\n","/Users/funkyflea/workspace/ui-practice/src/features/ts/ballDrag-scratch.tsx",[],"/Users/funkyflea/workspace/ui-practice/src/features/ts/ReactClock.tsx",["39","40"],{"ruleId":"41","severity":1,"message":"42","line":127,"column":5,"nodeType":"43","endLine":127,"endColumn":22,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":31,"nodeType":"47","messageId":"48","endLine":1,"endColumn":39},{"ruleId":"45","severity":1,"message":"49","line":1,"column":41,"nodeType":"47","messageId":"48","endLine":1,"endColumn":50},{"ruleId":"45","severity":1,"message":"50","line":7,"column":7,"nodeType":"47","messageId":"48","endLine":7,"endColumn":21},{"ruleId":"45","severity":1,"message":"51","line":8,"column":7,"nodeType":"47","messageId":"48","endLine":8,"endColumn":21},{"ruleId":"45","severity":1,"message":"52","line":12,"column":7,"nodeType":"47","messageId":"48","endLine":12,"endColumn":16},{"ruleId":"45","severity":1,"message":"53","line":54,"column":9,"nodeType":"47","messageId":"48","endLine":54,"endColumn":19},{"ruleId":"41","severity":1,"message":"54","line":75,"column":5,"nodeType":"43","endLine":75,"endColumn":14,"suggestions":"55"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTouchMove'. Either include it or remove the dependency array.","ArrayExpression",["56"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'springSetting1' is assigned a value but never used.","'springSetting2' is assigned a value but never used.","'allColors' is assigned a value but never used.","'HoursProps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'hoursCoordinates', 'minutesCoordinates', 'secondCoordinates', 'setHoursSpring', 'setMinutesSpring', and 'setSecondsSpring'. Either include them or remove the dependency array.",["57"],{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [handleMouseMove, handleTouchMove]",{"range":"62","text":"63"},"Update the dependencies array to be: [hoursCoordinates, minutesCoordinates, secondCoordinates, seconds, setHoursSpring, setMinutesSpring, setSecondsSpring]",{"range":"64","text":"65"},[2962,2979],"[handleMouseMove, handleTouchMove]",[2611,2620],"[hoursCoordinates, minutesCoordinates, secondCoordinates, seconds, setHoursSpring, setMinutesSpring, setSecondsSpring]"]